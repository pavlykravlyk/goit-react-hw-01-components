{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistoryItem/TransactionHistoryItem.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Section","Profile","username","tag","location","avatar","followers","views","likes","Description","src","alt","Avatar","Name","Tag","Location","Stats","Label","Quantity","Statistics","title","stats","Title","StatList","map","id","label","percentage","StatListItem","style","backgroundColor","randomColor","Percentage","Math","floor","random","toString","FriendListItem","name","isOnline","Status","width","FriendList","friends","friend","Item","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","TableHead","item","TableItem","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a1e910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3HF8E\",\"Description\":\"Profile_Description__3zeb0\",\"Avatar\":\"Profile_Avatar__g7pMn\",\"Name\":\"Profile_Name__1z6EO\",\"Tag\":\"Profile_Tag__1Ow3L\",\"Location\":\"Profile_Location__1tPwH\",\"Stats\":\"Profile_Stats__1zYeW\",\"Label\":\"Profile_Label__306Y4\",\"Quantity\":\"Profile_Quantity__1URG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__Luzw5\",\"Title\":\"Statistics_Title__1cXes\",\"StatList\":\"Statistics_StatList__3oEMc\",\"StatListItem\":\"Statistics_StatListItem__74p4O\",\"Label\":\"Statistics_Label__1YP5n\",\"Percentage\":\"Statistics_Percentage__1N6jI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Status\":\"FriendListItem_Status__gq-zQ\",\"Avatar\":\"FriendListItem_Avatar__RJMtf\",\"Name\":\"FriendListItem_Name__1srXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__2iHcc\",\"TableHead\":\"TransactionHistory_TableHead__3zGWA\",\"TableItem\":\"TransactionHistory_TableItem__2fTpO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"FriendList_FriendList__UG-vN\",\"Item\":\"FriendList_Item__2yn8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__LqS2d\"};","import styles from './Container.module.css'\n\nconst Container = ({children}) => {\n    return (\n        <div className={styles.Container}>{children}</div>\n    )\n}\n\nexport default Container;","import styles from './Section.module.css'\n\nconst Section = ({children}) => {\n    return (\n        <section className={styles.Section}>{children}</section>\n    )\n}\n\nexport default Section;","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css'\n\nconst Profile = ({\n  username,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <div className={styles.Profile} key={tag}>\n      <div className={styles.Description}>\n        <img src={avatar} alt={username} className={styles.Avatar} />\n        <p className={styles.Name}>{username}</p>\n        <p className={styles.Tag}>@{tag}</p>\n        <p className={styles.Location}>{location}</p>\n      </div>\n\n      <ul className={styles.Stats}>\n        <li>\n          <span className={styles.Label}>Followers</span>\n          <span className={styles.Quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={styles.Label}>Views</span>\n          <span className={styles.Quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={styles.Label}>Likes</span>\n          <span className={styles.Quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Statistics.module.css'\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.Statistics}>\n      {title && <h2 className={styles.Title}>{title}</h2>}\n\n      <ul className={styles.StatList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li className={styles.StatListItem} key={id} style={{backgroundColor: randomColor()}}>\n            <span className={styles.Label}>{label}</span>\n            <span className={styles.Percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  percentage: PropTypes.number,\n};\n\nexport default Statistics;\n\nconst randomColor = () => \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      {isOnline ? (\n        <span className={styles.Status} style={{ backgroundColor: 'green' }}>\n          {isOnline}\n        </span>\n      ) : (\n        <span className={styles.Status} style={{ backgroundColor: 'red' }}>\n          {isOnline}\n        </span>\n      )}\n      <img\n        className={styles.Avatar}\n        src={avatar}\n        alt=\"User avatar\"\n        width=\"48\"\n      />\n      <p className={styles.Name}>{name}</p>\n    </>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import FriendListItem from '../FriendListItem/FriendListItem';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css'\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.FriendList}>\n      {friends.map(friend => (\n        <li className={styles.Item} key={friend.id}>\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n// import styles from './TransactionHistoryItem.module.css'\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  return (\n    <>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </>\n  );\n};\n\nTransactionHistoryItem.propTypes = {\n    type: PropTypes.string,\n    amount: PropTypes.string,\n    currency: PropTypes.string,\n};\n\nexport default TransactionHistoryItem;\n","import TransactionHistoryItem from '../TransactionHistoryItem/TransactionHistoryItem';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.TransactionHistory}>\n      <thead className={styles.TableHead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr className={styles.TableItem} key={item.id}>\n            <TransactionHistoryItem\n              type={item.type}\n              amount={item.amount}\n              currency={item.currency}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport Profile from 'components/Profile/Profile';\nimport user from './user.json';\nimport Statistics from 'components/Statistics/Statistics';\nimport data from './data.json';\nimport FriendList from 'components/FriendList/FriendList';\nimport friends from './friends.json';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\nimport transactions from './transactions.json';\n\nconst App = () => {\n  return (\n    <Container>\n      <Section>\n        <Profile\n          username={user.username}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          followers={user.stats.followers}\n          views={user.stats.views}\n          likes={user.stats.likes}\n        />\n      </Section>\n      <Section>\n        <Statistics title=\"Upload stats\" stats={data} />\n        <Statistics stats={data} />\n      </Section>\n      <Section>\n        <FriendList friends={friends} />\n      </Section>\n      <Section>\n        <TransactionHistory items={transactions} />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}